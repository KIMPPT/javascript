이벤트 : 웹 브라우저가 알려주는 HTML 요소에 대한 사건의 발생
on과 관련된 속성이므로 모든 요소에 사용 가능
자주 쓰는 타입 : onload,onclick,onchange,onmouse-,onfocus
이벤트명="함수명() 또는 함수식". 함수명을 넣은 경우 js(script)에 함수식을 작성
예 : <button id="btn2" onclick="printTest()"></button>
이면 onclick이 이벤트타입이고 printTest()가 이벤트 실행 시 발생할 함수이다.

addEventListener : 객체나 요소의 함수에 이벤트 리스너를 전달하는 함수
대상객체.addEventListener(이벤트명,실행할 이벤트 핸들러);
이벤트명은 위에 적혀 있는 타입에서 on만 빼면 된다(예 : "click","focus")
하나의 객체에 여러 개의 이벤트 리스너를 등록 할 수 있다. 이 때는 이벤트 객체를 써야 한다
대상객체.addEventListener(이벤트명1,실행할 이벤트 핸들러);
대상객체.addEventListener(이벤트명2,실행할 이벤트 핸들러);
function 이벤트 핸들러(이벤트 객체){
    if(이벤트 객체.type==이벤트명1) 실행할 함수;
    if(이벤트 객체.type==이벤트명2) 실행함 함수; 
}
위와 같은 형태가 있다.

만약 querySelectorAll을 써서 배열로 받았다면 이벤트 객체 뒤에 .[인덱스 번호]를 붙여야 한다. 붙이지 않는다면 에러가 발생한다.

이벤트리스너의 경우 이벤트 핸들러에는 함수이름만 넣거나 익명함수만 가능하다.
만약 함수의 매개변수(인수)를 써야 한다면 익명함수 안에 매개변수를 써야 하는 함수를 호출하는 형태를 만들어야 한다.